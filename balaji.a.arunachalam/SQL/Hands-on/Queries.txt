1.Find employee(s) who had most swipes for a given day

mysql> select emp_name as Emp_Name,count(in_time)+count(out_time) as Total_swipes from employee where DATE="2020-06-01" group by emp_name;
+----------+--------------+
| Emp_Name | Total_swipes |
+----------+--------------+
| A        |            4 |
| B        |            4 |
+----------+--------------+
2 rows in set (0.01 sec)

2.Find time in office(login time) for each employee at each swipe

mysql> select emp_name,DATE,in_time as login_time from employee group by emp_name;
+----------+------------+------------+
| emp_name | DATE       | login_time |
+----------+------------+------------+
| A        | 2020-06-01 | 09:00:00   |
| B        | 2020-06-01 | 15:00:00   |
| C        | 2020-06-02 | 15:00:00   |
+----------+------------+------------+
3 rows in set (0.00 sec)

3.Get break time each employee hadat each swipe

mysql> select timediff(max(in_time),min(out_time)) as Break_Time from employee group by emp_name having count(in_time)=2;
+------------+
| Break_Time |
+------------+
| 00:15:00   |
| 01:30:00   |
+------------+
2 rows in set (0.00 sec)

4.Find employee(s) who did not swipe atleast once for on a given day

mysql> select emp_name from employee where in_time="NULL" group by emp_name;
Empty set, 1 warning (0.00 sec)

5.Get the AM/PM on recent swipe made by an employee using INSTR/SUBSTR function

mysql> select emp_name,Date,substr(convert(time_format(max(out_time),"%r"),char),-2,length(convert(time_format(max(out_time),"%r"),char))) as Recent_swipe from employee group by emp_name having count(out_time)>1;
+----------+------------+--------------+
| emp_name | Date       | Recent_swipe |
+----------+------------+--------------+
| A        | 2020-06-01 | PM           |
| B        | 2020-06-01 | PM           |
+----------+------------+--------------+
2 rows in set (0.01 sec)
(or)
select emp_name,Date,time_format(max(out_time),"%r") as Recent_swipe from employee group by emp_name having count(out_time)>1;

6.str= "'aaa, bb ccc'"
use substr/instr functions to return "b c" as output

mysql> select substr("aaa, bb ccc",7,3) as Expected_output;
+-----------------+
| Expected_output |
+-----------------+
| b c             |
+-----------------+
1 row in set (0.00 sec)

7.With below table, convert to expected output shown

eid          name    sal           month
101         A             100         Jan
101         A             200         Feb
102         B             200         Jan
102         B             300         Feb
103         C             200         Jan
103         C             200         Feb

expected output:

eid          name    jan          feb
101         A             100         200
102         B             200         300
103         C             200         200
104         D             100         300

mysql> select emp_id,emp_name,sum(case when month='jan' then emp_sal else 0 end) as Jan,sum(case when month='feb' then emp_sal else 0 end) as feb from employee_1 group by emp_name;
+--------+----------+------+------+
| emp_id | emp_name | Jan  | feb  |
+--------+----------+------+------+
|    101 | A        |  100 |  200 |
|    102 | B        |  200 |  300 |
|    103 | C        |  200 |  200 |
+--------+----------+------+------+
3 rows in set (0.01 sec)

8.find employee who did not have salary change

mysql> select emp_id,emp_name,sum(case when month='jan' then emp_sal else 0 end) as Jan,sum(case when month='feb' then emp_sal else 0 end) as feb from employee_1 group by emp_name having jan=feb;
+--------+----------+------+------+
| emp_id | emp_name | Jan  | feb  |
+--------+----------+------+------+
|    103 | C        |  200 |  200 |
+--------+----------+------+------+
1 row in set (0.00 sec)

9.Find employee who had maximum salary for a given month or have maximum salary difference amoung other employee.
If there is tie on maximum salary for given month, employee with maximum salary in upcoming month will be winner


mysql> select emp_id,max(emp_name),sum(case when month='jan' then emp_sal else 0 end)as jan,sum(case when month='feb' then emp_sal else 0 end)as feb from employee_1 group by emp_name order by jan desc,feb desc limit 1;
+--------+---------------+------+------+
| emp_id | max(emp_name) | jan  | feb  |
+--------+---------------+------+------+
|    102 | B             |  200 |  300 |
+--------+---------------+------+------+
1 row in set (0.01 sec)

10.Find the difference in marks of individual subject for different students and insert new column and add the difference in mark.

mysql> select stud_id,stud_name,a.stud_sub,marks,case when max_marks-marks>0 then max_marks-marks else marks-max_marks end as diff_marks
    -> from student as a
    -> inner join(select max(marks) as max_marks,stud_sub from student group by stud_sub) as b
    -> on a.stud_sub=b.stud_sub;
+---------+-----------+----------+-------+------------+
| stud_id | stud_name | stud_sub | marks | diff_marks |
+---------+-----------+----------+-------+------------+
|     101 | A         | PHY      |    25 |         10 |
|     101 | A         | CHE      |    34 |         14 |
|     101 | A         | MAT      |    47 |         50 |
|     101 | A         | SCI      |    87 |         11 |
|     102 | B         | PHY      |    35 |          0 |
|     102 | B         | CHE      |    48 |          0 |
|     102 | B         | MAT      |    97 |          0 |
|     102 | B         | SCI      |    98 |          0 |
|     102 | B         | ECM      |    97 |          0 |
|     102 | B         | CSP      |    22 |          0 |
+---------+-----------+----------+-------+------------+
10 rows in set (0.01 sec)

11.calculate the total sum of marks according to the department_code.

mysql> select stud_id,stud_name,a.stud_sub,marks,a.dept_id ,case when max_marks-marks>0 then max_marks-marks else marks-max_marks end as diff_marks,case when a.dept_id=c.dept_id then total_marks else 0 end as dept_max_marks
    -> from student as a
    -> inner join(select max(marks) as max_marks,stud_sub from student group by stud_sub) as b
    -> on a.stud_sub=b.stud_sub
    -> inner join(select sum(marks) as total_marks,dept_id from student group by dept_id) as c
    -> on a.dept_id=c.dept_id;
+---------+-----------+----------+-------+---------+------------+----------------+
| stud_id | stud_name | stud_sub | marks | dept_id | diff_marks | dept_max_marks |
+---------+-----------+----------+-------+---------+------------+----------------+
|     101 | A         | PHY      |    25 |    1030 |         10 |            142 |
|     101 | A         | CHE      |    34 |    1030 |         14 |            142 |
|     101 | A         | MAT      |    47 |    1032 |         50 |            144 |
|     101 | A         | SCI      |    87 |    1029 |         11 |            185 |
|     102 | B         | PHY      |    35 |    1030 |          0 |            142 |
|     102 | B         | CHE      |    48 |    1030 |          0 |            142 |
|     102 | B         | MAT      |    97 |    1032 |          0 |            144 |
|     102 | B         | SCI      |    98 |    1029 |          0 |            185 |
|     102 | B         | ECM      |    97 |    1031 |          0 |            119 |
|     102 | B         | CSP      |    22 |    1031 |          0 |            119 |
+---------+-----------+----------+-------+---------+------------+----------------+
10 rows in set (0.01 sec)

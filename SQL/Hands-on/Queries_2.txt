1.Fetch publisher information who have publish_city <> author_city and 
check if publish_city = author_country , display the correct publisher_city along with other publisher information based on author_city

mysql> select p.* from publisher as p
    -> join book as b on b.author_country=p.publish_city where p.publish_city<>b.author_city;
+------------+--------------------------+--------------+--------------------+----------+
| PUBLISH_ID | PUBLISH_NAME             | PUBLISH_CITY | PUBLISH_START_DATE | BRANCHES |
+------------+--------------------------+--------------+--------------------+----------+
| PB02       | Summer Night Publication | Canada       | 2019-08-31         |       25 |
+------------+--------------------------+--------------+--------------------+----------+
1 row in set (0.00 sec)

2.Fetch authors_name, author_country, publish_city, publish_start_date, branches who have publications with most number of branches

mysql> SELECT B.AUTHOR_NAME,B.AUTHOR_COUNTRY,P.PUBLISH_CITY,P.PUBLISH_START_DATE,P.BRANCHES FROM BOOK AS B
    -> JOIN PUBLISHER AS P
    -> ON P.PUBLISH_ID=B.PUBLISH_ID
    -> WHERE P.BRANCHES=(SELECT MAX(BRANCHES) FROM PUBLISHER);
+-------------+----------------+--------------+--------------------+----------+
| AUTHOR_NAME | AUTHOR_COUNTRY | PUBLISH_CITY | PUBLISH_START_DATE | BRANCHES |
+-------------+----------------+--------------+--------------------+----------+
| Andrew Jeff | GERMANY        | Canada       | 2019-08-31         |       25 |
+-------------+----------------+--------------+--------------------+----------+
1 row in set (0.00 sec)

3.Fetch publisher details who have authors in same city and get corresponding author details who belong to same country

mysql> select p.publish_id,p.publish_name,b.author_id,b.author_name from publisher as p
    -> join book as b on p.publish_id=b.publish_id where p.publish_city=b.author_city;
+------------+----------------------+-----------+--------------+
| publish_id | publish_name         | author_id | author_name  |
+------------+----------------------+-----------+--------------+
| PB03       | Novel Publisher Ltd. | AUT006    | Butler Andre |
| PB04       | Mark Book Sales      | AUT010    | Mary Coffing |
+------------+----------------------+-----------+--------------+
2 rows in set (0.00 sec)

4.Fetch authors who have incorrect author_country for same author_city.

mysql> select author_id,author_name,author_country,book.author_city,publish_id from book inner join
    -> (select author_city from book
    -> group by author_city
    -> having count(author_name)>1)temp
    -> on book.author_city=temp.author_city;
+-----------+-------------+----------------+-------------+------------+
| author_id | author_name | author_country | author_city | publish_id |
+-----------+-------------+----------------+-------------+------------+
| AUT007    | E. Howard   | EUROPE         | Berlin      | PB03       |
| AUT008    | Andrew Jeff | GERMANY        | Berlin      | PB02       |
+-----------+-------------+----------------+-------------+------------+
2 rows in set (0.00 sec)

5.Display correct author_country along with all author_information Fetch authors who do not have publisher from their country

mysql> SELECT B.AUTHOR_ID,B.AUTHOR_NAME,CASE WHEN AUTHOR_CITY='BERLIN' THEN 'GERMANY' ELSE AUTHOR_COUNTRY END
    -> AS AUTHOR_COUNTRY,B.AUTHOR_CITY,B.PUBLISH_ID FROM BOOK AS B
    -> JOIN PUBLISHER AS P ON P.PUBLISH_ID=B.PUBLISH_ID
    -> WHERE P.PUBLISH_CITY<>B.AUTHOR_CITY;
+-----------+----------------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+----------------------+----------------+---------------+------------+
| AUT001    | William Norton       | UK             | Cambridge     | PB01       |
| AUT002    | C. J. Wilde          | USA            | San Francisco | PB04       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow        | PB01       |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto       | PB03       |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi         | PB01       |
| AUT007    | E. Howard            | GERMANY        | Berlin        | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin        | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne     | PB01       |
+-----------+----------------------+----------------+---------------+------------+
8 rows in set (0.00 sec)

6.Fetch author details if first character of publisher name is same as author_name

mysql> select b.author_id,b.author_name,b.author_country,b.author_city,b.publish_id from book as b
    -> join publisher as p
    -> on substr(b.author_name,1,1)=substr(p.publish_name,1,1)
    -> group by b.author_name;
+-----------+----------------------+----------------+-------------+------------+
| author_id | author_name          | author_country | author_city | publish_id |
+-----------+----------------------+----------------+-------------+------------+
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow      | PB01       |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi       | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy   | PB04       |
+-----------+----------------------+----------------+-------------+------------+
3 rows in set (0.00 sec)

7.Fetch author details who have more than one initial before their name

mysql> select * from book where author_name like '%.%.%' group by author_name;
+-----------+-----------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME     | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+-----------------+----------------+---------------+------------+
| AUT002    | C. J. Wilde     | USA            | San Francisco | PB04       |
| AUT005    | S.B.Swaminathan | INDIA          | Delhi         | PB01       |
+-----------+-----------------+----------------+---------------+------------+
2 rows in set (0.00 sec)

8.Fetch author details who do not have initial in their name

mysql> select * from book where author_name not like '%.%' group by author_name;
+-----------+----------------------+----------------+-------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY | PUBLISH_ID |
+-----------+----------------------+----------------+-------------+------------+
| AUT001    | William Norton       | UK             | Cambridge   | PB01       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow      | PB01       |
| AUT006    | Butler Andre         | UK             | London      | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin      | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne   | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy   | PB04       |
+-----------+----------------------+----------------+-------------+------------+
6 rows in set (0.00 sec)

9.Fetch author details who have lower case in author_name

mysql> select * from book
    -> where upper(author_name)<>binary(author_name);
+-----------+----------------------+----------------+---------------+------------+
| AUTHOR_ID | AUTHOR_NAME          | AUTHOR_COUNTRY | AUTHOR_CITY   | PUBLISH_ID |
+-----------+----------------------+----------------+---------------+------------+
| AUT001    | William Norton       | UK             | Cambridge     | PB01       |
| AUT002    | C. J. Wilde          | USA            | San Francisco | PB04       |
| AUT003    | John Betjeman Hunter | RUSSIA         | Moscow        | PB01       |
| AUT004    | John Betjeman Hunter | CANADA         | Toronto       | PB03       |
| AUT005    | S.B.Swaminathan      | INDIA          | Delhi         | PB01       |
| AUT006    | Butler Andre         | UK             | London        | PB03       |
| AUT007    | E. Howard            | EUROPE         | Berlin        | PB03       |
| AUT008    | Andrew Jeff          | GERMANY        | Berlin        | PB02       |
| AUT009    | Drek Tailor          | Australia      | Melbourne     | PB01       |
| AUT010    | Mary Coffing         | USA            | New Jersy     | PB04       |
+-----------+----------------------+----------------+---------------+------------+
10 rows in set (0.00 sec)

10.Fetch author information and publisher information who have publisher with recent publish_start_date.

mysql> select b.author_id,b.author_name,p.publish_id,p.publish_name,p.publish_start_date from book as b
    -> join publisher as p on b.publish_id=p.publish_id where p.publish_start_date =(select max(publish_start_date) from publisher)group by p.publish_start_date having max(p.publish_start_date);
+-----------+-------------+------------+--------------------------+--------------------+
| author_id | author_name | publish_id | publish_name             | publish_start_date |
+-----------+-------------+------------+--------------------------+--------------------+
| AUT008    | Andrew Jeff | PB02       | Summer Night Publication | 2019-08-31         |
+-----------+-------------+------------+--------------------------+--------------------+
1 row in set (0.00 sec)

11.Fetch count of authors belong to same continent(eg. Berlin -> Europe)

mysql> SELECT COUNT(DISTINCT(TEMP.AUTHOR_NAME))AS NO_OF_AUTHOR,CASE WHEN TEMP.AUTHOR_COUNTRY='GERMANY' THEN 'EUROPE'ELSE TEMP.AUTHOR_COUNTRY END AS AUTHOR_COUNTRY FROM BOOK
    -> INNER JOIN(SELECT AUTHOR_NAME,CASE WHEN AUTHOR_CITY='BERLIN'OR'UK' THEN 'GERMANY' ELSE AUTHOR_COUNTRY END AS AUTHOR_COUNTRY FROM BOOK)AS TEMP
    -> ON TEMP.AUTHOR_NAME=BOOK.AUTHOR_NAME
    -> GROUP BY TEMP.AUTHOR_COUNTRY;
+--------------+----------------+
| NO_OF_AUTHOR | AUTHOR_COUNTRY |
+--------------+----------------+
|            1 | Australia      |
|            1 | CANADA         |
|            2 | EUROPE         |
|            1 | INDIA          |
|            1 | RUSSIA         |
|            2 | UK             |
|            2 | USA            |
+--------------+----------------+
7 rows in set (0.00 sec)